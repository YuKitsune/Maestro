name: Build and push Docker images.

on:
  release:
    status: [ published ]
  workflow_dispatch: # temp

env:
  container_registry: ghcr.io/yukitsune/maestro

jobs:

  build-api:
    name: Build and push the API Docker image
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: maestro-api:v0.0.1 # ${{ github.event.release.tag_name }}

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        docker build \
          --file build/package/maestro/Dockerfile \
          --tag ${{ env.IMAGE_NAME }} \
          --build-arg GIT_COMMIT="${{ github.sha }}" \
          --build-arg GIT_DIRTY="false" \
          --build-arg VERSION="${{ github.event.release.tag_name }}" \
          .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1.12.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push API Docker image
      run: docker push ${{ env.container_registry}}/${{ env.IMAGE_NAME }} 

  build-frontend:
    name: Build and push the frontend Docker image
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: "maestro-frontend:v0.0.1" # ${{ github.event.release.tag_name }}

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        docker build \
          ./web/frontend-remix \
          --file ./web/frontend-remix/Dockerfile \
          --tag ${{ env.IMAGE_NAME }} \
          .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1.12.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push frontend Docker image
      run: docker push ${{ env.container_registry}}/${{ env.IMAGE_NAME }} 
